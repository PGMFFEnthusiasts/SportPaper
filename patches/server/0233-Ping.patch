From b7b6b08c90b1ad33738eda277ce030fdcd0dbbe0 Mon Sep 17 00:00:00 2001
From: Tom Brady <tombrady@localhost>
Date: Sat, 7 Jun 2025 20:54:36 -0600
Subject: [PATCH] Ping


diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 24d15388..93dde097 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -55,6 +55,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     private int containerCounter;
     public boolean g;
     public int ping;
+    public int pingMin = Integer.MAX_VALUE; // PandaSpigot - Lag compensation ticks
     public boolean viewingCredits;
 
     // CraftBukkit start
diff --git a/src/main/java/net/minecraft/server/EntityProjectile.java b/src/main/java/net/minecraft/server/EntityProjectile.java
index 819034d8..1baa08a1 100644
--- a/src/main/java/net/minecraft/server/EntityProjectile.java
+++ b/src/main/java/net/minecraft/server/EntityProjectile.java
@@ -79,6 +79,19 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
         this.lastPitch = this.pitch = (float) (MathHelper.b(d1, (double) f3) * 180.0D / 3.1415927410125732D);
         this.i = 0;
 
+        // SportPaper - Lag-compensated projectiles
+        if (this.shooter instanceof EntityPlayer && ((EntityPlayer) this.shooter).pingMin != Integer.MAX_VALUE) {
+            EntityPlayer player = (EntityPlayer) shooter;
+            int ticks = (int) Math.min(Math.floor((double) player.ping / 50), 4);
+            for (int i = 0; i < ticks; i++) {
+                this.t_();
+                if (this.dead || this.inGround) {
+                    break;
+                }
+            }
+        }
+        // SportPaper end
+
         // SportPaper start - Clamp position and velocity
         this.locX = (double) Math.round(this.locX * 32.0D) / 32.0D;
         this.locY = (double) Math.round(this.locY * 32.0D) / 32.0D;
diff --git a/src/main/java/net/minecraft/server/ItemFood.java b/src/main/java/net/minecraft/server/ItemFood.java
index 4a2ec5dc..668005d6 100644
--- a/src/main/java/net/minecraft/server/ItemFood.java
+++ b/src/main/java/net/minecraft/server/ItemFood.java
@@ -50,7 +50,15 @@ public class ItemFood extends Item {
 
     public ItemStack a(ItemStack itemstack, World world, EntityHuman entityhuman) {
         if (entityhuman.j(this.k)) {
-            entityhuman.a(itemstack, this.d(itemstack));
+            // SportPaper start - Lag-compensated eating ticks
+            if (entityhuman instanceof EntityPlayer && ((EntityPlayer) entityhuman).pingMin != Integer.MAX_VALUE) {
+                EntityPlayer player = (EntityPlayer) entityhuman;
+                int ticks = Math.max(24, 32 - player.pingMin / 50);
+                entityhuman.a(itemstack, ticks);
+            } else {
+                entityhuman.a(itemstack, this.d(itemstack));
+            }
+            // SportPaper end
         }
 
         return itemstack;
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 89b97b6c..fb4e9662 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -2097,8 +2097,15 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     public void a(PacketPlayInKeepAlive packetplayinkeepalive) {
         if (packetplayinkeepalive.a() == this.i) {
             int i = (int) (this.d() - this.j);
+            this.player.pingMin = Math.min(this.player.pingMin, i); // SportPaper - Lag compensation ticks
 
-            this.player.ping = (this.player.ping * 3 + i) / 4;
+            // SportPaper start - Update ping quicker
+            if (this.player.ping == 0) {
+                this.player.ping = i;
+            } else {
+                this.player.ping = (this.player.ping * 3 + i) / 4;
+            }
+            // SportPaper end
         }
 
     }
-- 
2.39.3 (Apple Git-146)

